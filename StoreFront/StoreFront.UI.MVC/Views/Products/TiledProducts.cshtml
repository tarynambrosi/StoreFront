@model IEnumerable<StoreFront.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "Tiled Products";
}

<div class="watchs_section layout_padding">
    <div class="container">
        <h1 class="watchs_taital">Our Products</h1>
        <p class="text-right">

            <a asp-action="Index" class="btn btn-success">Table View</a>
        </p>
        @foreach (var item in Model)
        {
        <div class="watchs_section_2">
            <div class="row">
                <div class="col-md-6">
                    <div class="image_1"><img src="~/images/@item.ProductImage" alt="@item.ProductName"></div>
                </div>
                <div class="col-md-6">
                    <h4 class="uni_text">@item.ProductName</h4>
                    <p class="watchs_text">@item.ProductDescription</p>
                        <h4 class="rate_text"><span style="color: #b60213;"></span>@Html.DisplayFor(modelItem => item.ProductPrice)</h4>
                    <div class="read_bt1"><a href="javascript:void(0)">Add To Cart</a></div>
                </div>
            </div>
        </div>
        }
        <p class="text-center">
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Create" class="btn btn-primary" style="margin-top: 50px;">Add a New Product</a>
            }
        </p>
        </div>
        </div>

@* Original scaffolded code below *@
@* <h1>TiledProducts</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDiscontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDiscontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductStatus.ProductStatusId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.Address)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@